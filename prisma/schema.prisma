// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
} 

model UserSetting {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId     String
  launchPK     String
  rpcURL   String?
  shyftApiKey     String?
  maxRetries   Int?
  onboardingComplete Boolean  @default(false)
  enableDevnet Boolean  @default(false)
   priorityFee Float 
  jitoTips Float  
}

model TokenMetadata {
  id                           String    @id @default(auto()) @map("_id") @db.ObjectId
  marketId                     String?   @db.String
  poolId                       String?   @db.String
  date                         Int?      @db.Int
  tokenAddress                 String?   @db.String
  quoteAddress                 String?   @db.String
  quoteName                    String?   @db.String
  name                         String    @db.String
  symbol                       String    @db.String
  decimals                     Int       @db.Int
  supply                       Int       @db.Int
  image                        String?   @default("null") @db.String
  imageHash                    String?   @default("null") @db.String
  metaHash                     String?   @default("null") @db.String
  description                  String    @db.String
  website                      String?   @db.String
  twitter                      String?   @db.String
  telegram                     String?   @db.String
  discord                      String?   @db.String
  revokeUpdate                 Boolean   @default(false)
  revokeFreeze                 Boolean   @default(false)
  revokeMint                   Boolean   @default(false)
  tnxId                        String?   @db.String
  creators                     String[]
  userId                       String?   @db.String
  baseTokenInitialLiquidity    Float     @default(0.0) @db.Double 
  quoteTokenInitialLiquidity   Float     @default(0.0) @db.Double
  startTime                    Int       @default(0) @db.Int
  @@map("tokenmetadata")

}



model PrivateWallet {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  tokenAddress                     String?   @db.String
  userId                       String?   @db.String
  address     String 
  privateKey  String
  snipeAmount String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model GeneratedWallet {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  tokenAddress                     String?   @db.String
  userId                       String?   @db.String

  address     String
  privateKey  String
  snipeAmount String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

